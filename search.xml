<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[hexo日常报错维护]]></title>
      <url>%2F2017%2F04%2Fhexo%E6%97%A5%E5%B8%B8%E6%8A%A5%E9%94%99%E7%BB%B4%E6%8A%A4%2F</url>
      <content type="text"><![CDATA[注：遇到报错应自行排查，或首先查看hexo官方问题解答板块内容（链接：hexo官方问题答疑）。 意外的标记异常1.异常内容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051INFO Deleted database.INFO Start processingFATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path) [Line 3, Column 198] unexpected token: &#125;&#125; at Object.exports.prettifyError (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/lib.js:34:15) at new_cls.render (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/environment.js:469:27) at new_cls.renderString (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/environment.js:327:21) at /Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/extend/tag.js:66:9 at Promise._execute (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/debuggability.js:300:9) at Promise._resolveFromExecutor (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:481:18) at new Promise (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:77:14) at Tag.render (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/extend/tag.js:64:10) at Object.tagFilter [as onRenderEnd] (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/hexo/post.js:253:16) at /Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/hexo/render.js:65:19 at tryCatcher (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/util.js:16:23) at Promise._settlePromiseFromHandler (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:510:31) at Promise._settlePromise (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:567:18) at Promise._settlePromise0 (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:612:10) at Promise._settlePromises (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:691:18) at Async._drainQueue (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:133:16) at Async._drainQueues (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:143:10) at Immediate.Async.drainQueues (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:17:14) at runCallback (timers.js:574:20) at tryOnImmediate (timers.js:554:5) at processImmediate [as _immediateCallback] (timers.js:533:5)FATAL (unknown path) [Line 3, Column 198] unexpected token: &#125;&#125;Template render error: (unknown path) [Line 3, Column 198] unexpected token: &#125;&#125; at Object.exports.prettifyError (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/lib.js:34:15) at new_cls.render (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/environment.js:469:27) at new_cls.renderString (/Users/a001/GitHub/qumuase.github.io/node_modules/.2.5.2@nunjucks/src/environment.js:327:21) at /Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/extend/tag.js:66:9 at Promise._execute (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/debuggability.js:300:9) at Promise._resolveFromExecutor (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:481:18) at new Promise (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:77:14) at Tag.render (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/extend/tag.js:64:10) at Object.tagFilter [as onRenderEnd] (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/hexo/post.js:253:16) at /Users/a001/GitHub/qumuase.github.io/node_modules/.3.2.2@hexo/lib/hexo/render.js:65:19 at tryCatcher (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/util.js:16:23) at Promise._settlePromiseFromHandler (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:510:31) at Promise._settlePromise (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:567:18) at Promise._settlePromise0 (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:612:10) at Promise._settlePromises (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/promise.js:691:18) at Async._drainQueue (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:133:16) at Async._drainQueues (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:143:10) at Immediate.Async.drainQueues (/Users/a001/GitHub/qumuase.github.io/node_modules/.3.4.7@bluebird/js/release/async.js:17:14) at runCallback (timers.js:574:20) at tryOnImmediate (timers.js:554:5) at processImmediate [as _immediateCallback] (timers.js:533:5) 2.原因 这种类型的报错一般都是Markdown文章中使用了大括号{ }这个特殊字符，且没有转义导致编译时冲突未通过。 3.解决方法 可以参考Markdown语法规范，将{ }大括号通过 &amp;#123; &amp;#125; 进行转码处理。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Laravel＋Vuejs实现Task增删改查功能（转）]]></title>
      <url>%2F2017%2F04%2FLaravel%EF%BC%8BVuejs%E5%AE%9E%E7%8E%B0Task%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%8A%9F%E8%83%BD%EF%BC%88%E8%BD%AC%EF%BC%89%2F</url>
      <content type="text"><![CDATA[1.创建一条资源路由,如下图2.执行命令php artisan make:controller TaskController --resource，此时,在app/Http/Controllers目录下生成一个TaskController资源控制器，在index方法获取所有的tasks,如下图： 3.在app/resources/view/task目录下创建index.blade.php文件，如下：4.laravel实现的tasks列表功能效果，如下：5.简单的tasks列表展示完成，但是我们要用vuejs实现该功能,首先，直接加载vuejs压缩包，并实例化Vue(el:body表示整个body区域属于vuejs控制).6.把列表展示部分提取出来，放在template标签里面，如下：7.接下来要实现的就是如何用vuejs绑定数据到tempate模版，不废话，直接贴代码： 这里用vue的component组件，第一个模版替换自定义的tasks-app标签，(最好是这种形式,如果是tasks标签随着以后发展可能会加入新标签，避免与之冲突)，第二参数是一个json数据：template是指定哪个模板替换原有自定义标签，data就是数据，返回的是task空数据。我们绑定这个数据都模板，循环li标签这里用vue里的v-for,因为laravel的模板变量标签是&#123;&#123; &#125;&#125;与vuejs的语法冲突，所以在前面加&#123;&#123; &#125;&#125;前加@laravel就不会解析模板标签。 8.因为绑定data里面的tasks数据为空，所以页面展示效果就是没有内容的列表页，如下：9.接下来需要做，如何用vuejs从后台获取数据，绑定到tasks上面? 1直接用jquery库实现get请求获取tasks数据，同时绑定到data数据tasks上。 10.创建tasks的API路由，同时创建TaskApiControler资源控制器，如下：11.此时，tasks列表页的效果又回到我们最开始用laravel实现tasks列表效果相同。12.接下来实现用vuejs实现删除task，同时删除数据记录。不过在这之前加载vuejs的一个插件vue-resource，该插件用法见：vue-resource。在component组件里添加deleteTask方法同时绑定到删除按钮上该删除事件，代码如下： 注意：用vue-resource插件注册一个资源路由，跟laravel里面的资源路由用法差不多，绑定到删除按钮传递一个task一条记录到deleteTask方法，执行resource.delete方法到后台,实际对应后台的删除路由，后台删除控制器代码如下： 13.在视图里点击删除按钮，会实现删除功能同时删除数据库纪录，但这里报错(不要方！！！因为没有Laravel没有获取token值），加如下两行代码即可： 1删除数据库的记录vuejs同时执行$remove删除tasks 里面的该条记录 14.接下来实现添加task，在template增加一个form 表单，在vue的component组件添加createTask方法，并且在input用v-model绑定数据notes，同时在data初始化一个notes： 1创建Task成功，但是需要优化效果，这里简单优化两个地方，一个是创建成功现实在最前面，另一个是清空input框数据。具体修改代码如下： 注意：这里的orderBy是vuejs的排序，－1代表倒序。 15.最后的效果，如下：编辑功能如添加功能，稍作修改即可。整个功能实现完成！初学VueJs使用的不是很好，欢迎指正！(转) 注：本文章转自公众号：chengxuyuanbiji，本文转载已取得授权。另转载请注明出处，一切权益归原作者所有。扫描以下二维码关注 chengxuyuanbiji 公众号，掌握最新Laravel及相关前端扩展技术知识。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[《深入浅出Node.js》笔记摘录（一）]]></title>
      <url>%2F2017%2F04%2F%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BANode.js%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
      <content type="text"><![CDATA[模块的实现 区分为node自身提供的核心模块与用户编写的文件模块优先从缓存加载 路径分析 文件定位 编译执行文件拓展名分析require( )在分析标识符的过程中，会出现标识符中不包含文件拓展名的情况。node会按照.js、.json、.node的顺序补充拓展名，依次尝试。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[红薯育苗种植记录]]></title>
      <url>%2F2017%2F04%2F%E7%BA%A2%E8%96%AF%E7%A7%8D%E6%A4%8D%E8%AE%B0%E5%BD%95%2F</url>
      <content type="text"><![CDATA[保持更新，直至收获或全部培育失败。 &gt; 2017.04.22 育苗入土 &gt; 2017.01.10 优质红薯育苗开始 由来： 年前得到了一些市面买不到(主要是对方不售卖)的优质红薯，不是很多，本着今年吃完明年还想继续吃得上的精神，萌发了育苗扦插种植的想法。 育苗11月10号(5℃±)选择部分红薯切面入水育苗 14月22号(25℃±)培育好的苗二次培育 因为无过往经验，网上技术教程也众说纷坛，所以为了保证至少存活下来一棵苗，主要分为以下五种实施方案： 1.室温下自然生长的母体带苗入营养土培育。04.30更新：2.室温下自然生长的母体培育出来的嫩苗单独入营养土培育。04.30更新：05.01更新：迁移至三加仑大盆种植。3.入水育苗的母体所培育出来的嫩苗单独入沙土培育。4.入水育苗的母体所培育出来的嫩苗单独入水二次培育。04.30更新：此方式育苗不生长，已放弃。5.入水育苗的母体继续保持培育。05.01更新：迁址至五加仑大盆种植。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JSON数据的那点事]]></title>
      <url>%2F2017%2F04%2Fjson%E6%95%B0%E6%8D%AE%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B%2F</url>
      <content type="text"><![CDATA[1.基础JSON有两种结构，对象和数组。 JSON对象结构是以“{”大括号开始，以“}”大括号结束。中间部分由n个以“，”分隔的“key(键)/value(值)”对构成，关键字和值之间以“：”分隔，一般语法结构如下方代码所示(其中key是字符串，而value可以是字符串，数值，true，false，null，对象或数组)： 12345&#123; name: xiao ming, age: 18, ...&#125; JSON数组结构是以“[”开始，“]”结束，中间由n个以“，”分隔的值列表组成，一般语法结构如下方代码所示： 12345678910[ &#123; name: xiao ming, age: 18 &#125;, &#123; name: xiao hong, age: 21 &#125;] 2.操作 分为两种方式：“.”和“[key]”。 其中JSON对象与JSON数组可互相转换，譬如有下边一组JSON数据需要格式化： 1234567891011121314151617181920&#123; &quot;10&quot;: &#123; &quot;id&quot;: 7, &quot;sorts&quot;: 0, &quot;level&quot;: 1, &quot;goods&quot;: [] &#125;, &quot;11&quot;: &#123; &quot;id&quot;: 8, &quot;sorts&quot;: 0, &quot;level&quot;: 1, &quot;goods&quot;: [] &#125;, &quot;12&quot;: &#123; &quot;id&quot;: 10, &quot;sorts&quot;: 0, &quot;level&quot;: 2, &quot;goods&quot;: [] &#125;&#125; 首先尝试遍历展示对应数据的时候json.parse()后直接获取JSON对象的length，返回的结果肯定是undefined了。 遍历后json[i]获取到i的值是对应当前数据的key值，而期望得到的是以0为下标开始的数据格式(类似于JSON数组的下标表示方式)。 网上的方法如下图for in的循环方式，处理结果只能得到数据的总长度，解决了最开始直接获取length输出undefined的问题，数据结构依然不是期望结果。 12345678910111213function getjson(json)&#123; var jsonLength = 0; for(var item in json)&#123; jsonLength++; &#125; return jsonLength;&#125; 最终，通过Object.keys与.map()方法组合将JSON对象转化为JSON数组。转化代码如下： 1234json = JSON.parse(json);json = Object.keys(json).map(function(k)&#123; return json[k];&#125;); 根据数据情况需先将字符串转化为对象 Object.keys(json)返回参数json可被遍历的属性 .map()返回json遍历后JSON数组。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome !]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[sublime text 头部自动化注释（DocBlockr）]]></title>
      <url>%2F2016%2F04%2Fsublime%20text%20%E5%A4%B4%E9%83%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B3%A8%E9%87%8A%EF%BC%88DocBlockr%EF%BC%89%2F</url>
      <content type="text"><![CDATA[通过sublime text下package control 的 Install Package安装DocBlockr插件。 打开Preferences -&gt; Package Settings -&gt; DocBlockr-&gt;Settings - User 配置文件,也可以直接将新修改的配置信息保存到”Default Settins”。(“Default Settins”是默认配置文件，需要管理员权限才能修改。一般情况下不推荐直接修改系统默认配置文件)。 将下面的代码根据需求保存到User配置文件中并保存文件，再次触发DocBlockr即可看到效果。 123456789101112131415161718&#123; &quot;jsdocs_param_name&quot;: false, &quot;jsdocs_param_description&quot;: false, &quot;jsdocs_return_description&quot;: [], &quot;jsdocs_return_tag&quot;: false, &quot;jsdocs_extra_tags_go_after&quot;: [], &quot;jsdocs_align_tags&quot;: [], &quot;jsdocs_extra_tags&quot;: [ &quot;&quot;, &quot;@DateTime &#123;&#123;datetime&#125;&#125;&quot;, &quot;&quot;, &quot;@author ***&quot;, &quot;&quot;, &quot;保持优雅的代码注释&quot;, &quot;maintain the elegant code comments&quot;, &quot;@version $&#123;1:[version]&#125;&quot;, ]&#125; 更多自定义配置可参考官方文档（https://github.com/spadgos/sublime-jsdocs）。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[python3-3.5.1 already installed, it's just not linked]]></title>
      <url>%2F2016%2F04%2Fpython3-3.5.1%20already%20installed%2C%20it's%20just%20not%20linked%2F</url>
      <content type="text"><![CDATA[mac安装python3版本之后无法启动，运行下面一下代码即可： 1sudo ln -s /Library/Frameworks/Python.framework/Versions/3.4/bin/python3 /usr/local/bin/python3]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[wordpress权限及后台FTP登录失败问题解决方法]]></title>
      <url>%2F2016%2F02%2Fwordpress%E6%9D%83%E9%99%90%E5%8F%8A%E5%90%8E%E5%8F%B0FTP%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[在后台模板进行模板编辑无保存按钮，提示当前为只读权限。个人解决方法就是修改整个文件夹的权限，使当前用户及组拥有Write和eXecute权限。 在wordpress后台版本更新或者安装插件时提示输入FTP账户信息，出现这个问题的原因是Apache/Nginx的执行身份是非文件归属身份。解决方法为编辑wordpress项目根目录下的配置文件(wp-config.php),在最后一行加上以下一行代码: 1define(&apos;FS_METHOD&apos;, &quot;direct&quot;);]]></content>
    </entry>

    
  
  
</search>
